syntax = "proto3";
package likecoin.likechain.likenft;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "likenft/params.proto";
import "likenft/classes_by_iscn.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/likecoin/likechain/x/likenft/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/likecoin/likechain/likenft/params";
  }
  // Queries a ClassesByISCN by index.
	rpc ClassesByISCN(QueryGetClassesByISCNRequest) returns (QueryGetClassesByISCNResponse) {
		option (google.api.http).get = "/likecoin/likechain/likenft/classes_by_iscn/{iscnIdPrefix}";
	}

	// Queries a list of ClassesByISCN items.
	rpc ClassesByISCNAll(QueryAllClassesByISCNRequest) returns (QueryAllClassesByISCNResponse) {
		option (google.api.http).get = "/likecoin/likechain/likenft/classes_by_iscn";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetClassesByISCNRequest {
	  string iscnIdPrefix = 1;

}

message QueryGetClassesByISCNResponse {
	ConcreteClassesByISCN classesByISCN = 1 [(gogoproto.nullable) = false];
}

message QueryAllClassesByISCNRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllClassesByISCNResponse {
	repeated ConcreteClassesByISCN classesByISCN = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
