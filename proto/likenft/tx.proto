syntax = "proto3";
package likecoin.likechain.likenft;

import "gogoproto/gogo.proto";
import "cosmos/nft/v1beta1/nft.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/likecoin/likechain/x/likenft/types";

// Msg defines the Msg service.
service Msg {
  rpc NewClass(MsgNewClass) returns (MsgNewClassResponse);
  rpc UpdateClass(MsgUpdateClass) returns (MsgUpdateClassResponse);
  rpc MintNFT(MsgMintNFT) returns (MsgMintNFTResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgNewClass {
  string creator = 1;
  string iscnIdPrefix = 2;
  string name = 3;
  string symbol = 4;
  string description = 5;
  string uri = 6;
  string uriHash = 7;
  bytes metadata = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "JsonInput"
  ];
  bool burnable = 9;
}

message MsgNewClassResponse {
  cosmos.nft.v1beta1.Class class = 1 [(gogoproto.nullable) = false];
}

message MsgUpdateClass {
  string creator = 1;
  string classId = 2;
  string name = 3;
  string symbol = 4;
  string description = 5;
  string uri = 6;
  string uriHash = 7;
  bytes metadata = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "JsonInput"
  ];
  bool burnable = 9;
}

message MsgUpdateClassResponse {
  cosmos.nft.v1beta1.Class class = 1 [(gogoproto.nullable) = false];
}

message MsgMintNFT {
  string creator = 1;
  string classId = 2;
  string id = 3;
  string uri = 4;
  string uriHash = 5;
  bytes metadata = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "JsonInput"
  ];
}

message MsgMintNFTResponse {
  cosmos.nft.v1beta1.NFT nft = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # proto/tx/message