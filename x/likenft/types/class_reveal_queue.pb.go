// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: likenft/class_reveal_queue.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ClassRevealQueue struct {
	RevealTime time.Time `protobuf:"bytes,1,opt,name=revealTime,proto3,stdtime" json:"revealTime"`
	ClassId    string    `protobuf:"bytes,2,opt,name=classId,proto3" json:"classId,omitempty"`
}

func (m *ClassRevealQueue) Reset()         { *m = ClassRevealQueue{} }
func (m *ClassRevealQueue) String() string { return proto.CompactTextString(m) }
func (*ClassRevealQueue) ProtoMessage()    {}
func (*ClassRevealQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca4ae5e06215be6f, []int{0}
}
func (m *ClassRevealQueue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClassRevealQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClassRevealQueue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClassRevealQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassRevealQueue.Merge(m, src)
}
func (m *ClassRevealQueue) XXX_Size() int {
	return m.Size()
}
func (m *ClassRevealQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassRevealQueue.DiscardUnknown(m)
}

var xxx_messageInfo_ClassRevealQueue proto.InternalMessageInfo

func (m *ClassRevealQueue) GetRevealTime() time.Time {
	if m != nil {
		return m.RevealTime
	}
	return time.Time{}
}

func (m *ClassRevealQueue) GetClassId() string {
	if m != nil {
		return m.ClassId
	}
	return ""
}

func init() {
	proto.RegisterType((*ClassRevealQueue)(nil), "likecoin.likechain.likenft.ClassRevealQueue")
}

func init() { proto.RegisterFile("likenft/class_reveal_queue.proto", fileDescriptor_ca4ae5e06215be6f) }

var fileDescriptor_ca4ae5e06215be6f = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xc8, 0xc9, 0xcc, 0x4e,
	0xcd, 0x4b, 0x2b, 0xd1, 0x4f, 0xce, 0x49, 0x2c, 0x2e, 0x8e, 0x2f, 0x4a, 0x2d, 0x4b, 0x4d, 0xcc,
	0x89, 0x2f, 0x2c, 0x4d, 0x2d, 0x4d, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x02, 0xa9,
	0x48, 0xce, 0xcf, 0xcc, 0xd3, 0x03, 0x33, 0x32, 0x12, 0xa1, 0xac, 0xbc, 0xb4, 0x12, 0x29, 0x91,
	0xf4, 0xfc, 0xf4, 0x7c, 0xb0, 0x32, 0x7d, 0x10, 0x0b, 0xa2, 0x43, 0x4a, 0x3e, 0x3d, 0x3f, 0x3f,
	0x3d, 0x27, 0x55, 0x1f, 0xcc, 0x4b, 0x2a, 0x4d, 0xd3, 0x2f, 0xc9, 0xcc, 0x4d, 0x2d, 0x2e, 0x49,
	0xcc, 0x2d, 0x80, 0x28, 0x50, 0x2a, 0xe2, 0x12, 0x70, 0x06, 0x59, 0x17, 0x04, 0xb6, 0x2d, 0x10,
	0x64, 0x99, 0x90, 0x0b, 0x17, 0x17, 0xc4, 0xf2, 0x90, 0xcc, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0x6e, 0x23, 0x29, 0x3d, 0x88, 0x49, 0x7a, 0x30, 0x93, 0xf4, 0x42, 0x60, 0x26, 0x39, 0x71,
	0x9c, 0xb8, 0x27, 0xcf, 0x30, 0xe1, 0xbe, 0x3c, 0x63, 0x10, 0x92, 0x3e, 0x21, 0x09, 0x2e, 0x76,
	0xb0, 0x47, 0x3c, 0x53, 0x24, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x27, 0xf7, 0x13,
	0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x71, 0xc2, 0x63, 0x39, 0x86,
	0x0b, 0x8f, 0xe5, 0x18, 0x6e, 0x3c, 0x96, 0x63, 0x88, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d,
	0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x87, 0xf9, 0x55, 0x1f, 0xee, 0x57, 0xfd, 0x0a, 0x7d, 0x58, 0x10,
	0x95, 0x54, 0x16, 0xa4, 0x16, 0x27, 0xb1, 0x81, 0x1d, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x86, 0x98, 0x40, 0x36, 0x3a, 0x01, 0x00, 0x00,
}

func (m *ClassRevealQueue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClassRevealQueue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClassRevealQueue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ClassId) > 0 {
		i -= len(m.ClassId)
		copy(dAtA[i:], m.ClassId)
		i = encodeVarintClassRevealQueue(dAtA, i, uint64(len(m.ClassId)))
		i--
		dAtA[i] = 0x12
	}
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.RevealTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.RevealTime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintClassRevealQueue(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintClassRevealQueue(dAtA []byte, offset int, v uint64) int {
	offset -= sovClassRevealQueue(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ClassRevealQueue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.RevealTime)
	n += 1 + l + sovClassRevealQueue(uint64(l))
	l = len(m.ClassId)
	if l > 0 {
		n += 1 + l + sovClassRevealQueue(uint64(l))
	}
	return n
}

func sovClassRevealQueue(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozClassRevealQueue(x uint64) (n int) {
	return sovClassRevealQueue(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ClassRevealQueue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClassRevealQueue
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClassRevealQueue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClassRevealQueue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RevealTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassRevealQueue
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClassRevealQueue
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClassRevealQueue
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.RevealTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClassRevealQueue
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClassRevealQueue
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClassRevealQueue
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClassRevealQueue(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClassRevealQueue
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipClassRevealQueue(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowClassRevealQueue
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClassRevealQueue
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClassRevealQueue
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthClassRevealQueue
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupClassRevealQueue
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthClassRevealQueue
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthClassRevealQueue        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowClassRevealQueue          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupClassRevealQueue = fmt.Errorf("proto: unexpected end of group")
)
